name: Test, build and deploy dp-faktasider-frontend

on:
  workflow_dispatch:
  push:

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/dp-faktasider-frontend:${{ github.sha }}
  IMAGE_CACHE_RUNTIME: docker.pkg.github.com/${{ github.repository }}/dp-faktasider-frontend-cache-runtime
  IMAGE_CACHE_BUILDER: docker.pkg.github.com/${{ github.repository }}/dp-faktasider-frontend-cache-builder

jobs:
  jest-test:
    name: Jest tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Test
        env:
          TZ: Europe/Oslo
        run: |
          npm install --no-save --no-audit
          npm test
          npm run typeCheck

  cypress-test:
    name: Cypress tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm start
        env:
          SANITY_READ_TOKEN: ${{ secrets.CYPRESS_READ_TOKEN_SANITY }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

  build:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"

      - name: Archive NAIS yaml
        uses: actions/upload-artifact@v1
        with:
          name: nais-yaml
          path: nais

  deploy-dev-gcp:
    name: Deploy to dev gcp
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml
          VARS: nais/dev-gcp/vars.yaml
          PRINT_PAYLOAD: true

      - name: Lag deployment i Sentry
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: https://sentry.gc.nav.no
          SENTRY_ORG: nav
          SENTRY_PROJECT: dp-faktasider-frontend
        with:
          environment: development
          version: ${{ github.sha }}
          set_commits: skip

  deploy-prod-gcp:
    name: Deploy to prod gcp
    needs: [deploy-dev-gcp, jest-test, cypress-test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/nais.yaml
          VARS: nais/prod-gcp/vars.yaml
          PRINT_PAYLOAD: true

      - name: Lag deployment i Sentry
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: https://sentry.gc.nav.no
          SENTRY_ORG: nav
          SENTRY_PROJECT: dp-faktasider-frontend
        with:
          environment: production
          version: ${{ github.sha }}
          set_commits: skip
